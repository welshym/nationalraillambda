{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Lambda and API Gateway",
  "Parameters": {
    "S3Bucket": {
      "Description": "The name of the S3 bucket that contains the source code of your Lambda function.",
      "Type": "String"
    },
    "S3Key": {
      "Description": "The location and name of your source code .zip file.",
      "Type": "String",
      "Default": "lambda.zip"
    }
  },
  "Resources": {
    "LambdaRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Principal": {
              "Service": "lambda.amazonaws.com"
            },
            "Action": ["sts:AssumeRole"]
          }]
        },
        "Path": "/",
        "Policies": [{
          "PolicyName": "logs",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [{
              "Effect": "Allow",
              "Action": [
                 "logs:*"
              ],
              "Resource": "arn:aws:logs:*:*:*"
            }]
          }
        },{
          "PolicyName": "dynamodb",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [{
              "Effect": "Allow",
              "Action": [
                "dynamodb:Scan",
                "dynamodb:PutItem",
                "dynamodb:GetItem",
                "dynamodb:DeleteItem",
                "dynamodb:Query",
                "dynamodb:UpdateItem"
              ],
              "Resource": "arn:aws:dynamodb:*:*:table/delays",
            }]
          }
        }]
      }
    },
    "Lambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {"Ref": "S3Bucket"},
          "S3Key": {"Ref": "S3Key"}
        },
        "Description": "generic handler",
        "Handler": "lambda.handler",
        "MemorySize": 128,
        "Role": {"Fn::GetAtt": ["LambdaRole", "Arn"]},
        "Runtime": "nodejs6.10",
        "Timeout": 3
      }
    },
    "LambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {"Fn::GetAtt": ["Lambda", "Arn"]},
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {"Fn::Join": ["", ["arn:aws:execute-api:", {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"}, ":", {"Ref": "RestApi"}, "/*"]]}
      }
    },

    "RestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "My API Gateway Test"
      }
    },

    "DelayDetailsModel": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "ContentType": "application/json",
        "Name": "DelayDetails",
        "RestApiId": {"Ref": "RestApi"},
        "Schema": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "title": "DelayDetails",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "fullName": {
              "type": "string"
            },
            "scheduledTimestamp": {
              "type": "string"
            },
            "crs": {
              "type": "string"
            },
            "actualTimestamp": {
              "type": "string"
            }
          },
          "required": ["fullName", "scheduledTimestamp", "crs", "actualTimestamp"]
        }
      }
    },

    "DelayModel": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "ContentType": "application/json",
        "Name": "Delay",
        "RestApiId": {"Ref": "RestApi"},
        "Schema": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "title": "Delay",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "delayInSeconds": {
              "type": "string"
            },
            "delayDate": {
              "type": "string"
            },
            "trainId": {
              "type": "string"
            },
            "arrivalDetails": {
              $ref: {"Fn::Join": ["", ["https://apigateway.amazonaws.com/restapis/", {"Ref": "RestApi"}, "/models/", {"Ref": "DelayDetailsModel"}]]}
            },
            "departureDetails": {
              $ref: {"Fn::Join": ["", ["https://apigateway.amazonaws.com/restapis/", {"Ref": "RestApi"}, "/models/", {"Ref": "DelayDetailsModel"}]]}            }
          },
          "required": ["delayDate", "trainId"]
        }
      }
    },
      
    "DelaysModel": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "ContentType": "application/json",
        "Name": "Delays",
        "RestApiId": {"Ref": "RestApi"},
        "Schema": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "title": "Delays",
          "type": "array",
          "items": {
            "$ref": {"Fn::Join": ["", ["https://apigateway.amazonaws.com/restapis/", {"Ref": "RestApi"}, "/models/", {"Ref": "DelayModel"}]]}
          }
        }
      }
    },
    "RequestValidator": {
      "Type": "AWS::ApiGateway::RequestValidator",
      "Properties": {
        "Name": "myRequestValidator",
        "RestApiId": {
          "Ref": "RestApi"
        },
        "ValidateRequestBody": true
      }
    },
      
    "DelaysResource": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": {"Ref": "RestApi"},
        "ParentId": {"Fn::GetAtt": ["RestApi", "RootResourceId"]},
        "PathPart": "delays"
      }
    },
      
    "DelaysGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "RestApiId": {"Ref": "RestApi"},
        "ResourceId": {"Ref": "DelaysResource"},
        "HttpMethod": "GET",
        "AuthorizationType": "NONE",
        "Integration": {
          "Type": "AWS",
          "IntegrationHttpMethod": "POST",
          "Uri": {"Fn::Join" : ["", ["arn:aws:apigateway:", {"Ref": "AWS::Region"}, ":lambda:path/2015-03-31/functions/", {"Fn::GetAtt": ["Lambda", "Arn"]}, "/invocations"]]},
          "IntegrationResponses": [{
            "ResponseTemplates": {
              "application/json": "$input.json('$.body')"
            },
            "StatusCode": 200
          },{
            "SelectionPattern": "^ERROR.*",
            "ResponseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$'))\n{\n  \"errorMessage\" : \"$inputRoot.errorMessage\",\n  \"errorType\" : \"$inputRoot.errorType\"\n}"
            },
            "StatusCode": 400
          }],
          "PassthroughBehavior": "NEVER",
          "RequestTemplates": {
            "application/json": "#set($qs = $input.params().querystring)\n{\n\"fun\": \"getDelaysDB\",\n\"query\":{ #foreach ($key in $qs.keySet())\n\"$key\":\"$qs.get($key)\"#if($foreach.hasNext), #end #end}}"
          }
        },
        "RequestParameters": {
          "method.request.querystring.fromDate": false,
          "method.request.querystring.endDate": false
        },
        "MethodResponses": [{
          "ResponseModels": {
            "application/json": {"Ref": "DelaysModel"}
          },
          "StatusCode": 200
        },{
          "ResponseModels": {
            "application/json": "Empty"
          },
          "StatusCode": 400
        }]
      }
    },

      
    "DelaysPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "RestApiId": {"Ref": "RestApi"},
        "ResourceId": {"Ref": "DelaysResource"},
        "HttpMethod": "POST",
        "AuthorizationType": "NONE",
        "Integration": {
          "Type": "AWS",
          "IntegrationHttpMethod": "POST",
          "Uri": {"Fn::Join" : ["", ["arn:aws:apigateway:", {"Ref": "AWS::Region"}, ":lambda:path/2015-03-31/functions/", {"Fn::GetAtt": ["Lambda", "Arn"]}, "/invocations"]]},
          "IntegrationResponses": [{
            "ResponseTemplates": {
              "application/json": "#set($inputRoot = $input.path('$'))\n{\n  \"trainId\" : \"$inputRoot.body.trainId\",\n  \"delayDate\" : \"$inputRoot.body.delayDate\",\n  \"departureDetails\" : {\n    \"scheduledTimestamp\" : \"$inputRoot.body.departureDetails.scheduledTimestamp\",\n    \"crs\" : \"$inputRoot.body.departureDetails.crs\",\n    \"fullName\" : \"$inputRoot.body.departureDetails.fullName\",\n    \"actualTimestamp\" : \"$inputRoot.body.departureDetails.actualTimestamp\"\n  },\n  \"delayInSeconds\" : \"$inputRoot.body.trainId\",\n  \"arrivalDetails\" : {\n    \"scheduledTimestamp\" : \"$inputRoot.body.arrivalDetails.scheduledTimestamp\",\n    \"crs\" : \"$inputRoot.body.arrivalDetails.crs\",\n    \"fullName\" : \"$inputRoot.body.arrivalDetails.fullName\",\n    \"actualTimestamp\" : \"$inputRoot.body.arrivalDetails.actualTimestamp\"\n  }\n}"
            },
            "StatusCode": 201
          },{
            "SelectionPattern": ".*serverError",
            "ResponseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$'))\n{\n  \"errorMessage\" : \"$inputRoot.errorMessage\",\n  \"errorType\" : \"$inputRoot.errorType\"\n}"
            },
            "StatusCode": 500
          }],
          "PassthroughBehavior": "when_no_templates",
          "RequestTemplates": {
            "application/json": "#set($inputRoot = $input.path('$'))\n{\n  \"fun\": \"postDelaysDB\",\n  \"delay\" : {\n      \"trainId\" : \"$inputRoot.trainId\",\n      \"delayDate\" : \"$inputRoot.delayDate\",\n      \"departureDetails\" : {\n        \"scheduledTimestamp\" : \"$inputRoot.departureDetails.scheduledTimestamp\",\n        \"crs\" : \"$inputRoot.departureDetails.crs\",\n        \"fullName\" : \"$inputRoot.departureDetails.fullName\",\n        \"actualTimestamp\" : \"$inputRoot.departureDetails.actualTimestamp\"\n      },\n      \"delayInSeconds\" :  \"$inputRoot.delayInSeconds\",\n      \"arrivalDetails\" : {\n        \"scheduledTimestamp\" : \"$inputRoot.arrivalDetails.scheduledTimestamp\",\n        \"crs\" : \"$inputRoot.arrivalDetails.crs\",\n        \"fullName\" : \"$inputRoot.arrivalDetails.fullName\",\n        \"actualTimestamp\" : \"$inputRoot.arrivalDetails.actualTimestamp\"\n      }\n    }\n}"
          }
        },
        "RequestParameters": {
        },
        "RequestValidatorId" : {
          "Ref": "RequestValidator"
        },
        "RequestModels": {
          "application/json": {"Ref": "DelayModel"}
        },
        "MethodResponses": [{
          "ResponseModels": {
            "application/json": {"Ref": "DelaysModel"}
          },
          "StatusCode": 201
        },{
          "ResponseModels": {
            "application/json": "Empty"
          },
          "StatusCode": 400
        },{
          "ResponseModels": {
            "application/json": "Empty"
          },
          "StatusCode": 500
        }]
      }
    },
      
    "RestApiDeployment": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {"Ref": "RestApi"},
        "StageName": "v1"
      },
      "DependsOn": ["DelaysGet"]
    }
  },
        
  "Outputs": {
    "ApiId": {
      "Value": {"Ref": "RestApi"}
    }
  }
}


